# Generated by Django 5.1.3 on 2024-11-17 11:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=50)),
                ('is_unlocked', models.BooleanField(default=False)),
                ('points_to_complete', models.PositiveIntegerField(default=50)),
                ('flashcard_count', models.PositiveIntegerField(default=5)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('level_order', models.PositiveIntegerField(unique=True)),
                ('points_to_advance', models.PositiveIntegerField(default=100)),
                ('difficulty', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], max_length=50)),
                ('unlocked_by_test', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Level',
                'verbose_name_plural': 'Levels',
            },
        ),
        migrations.CreateModel(
            name='Flashcard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=255)),
                ('definition', models.TextField()),
                ('example', models.TextField(blank=True, null=True)),
                ('translation', models.CharField(blank=True, max_length=255, null=True)),
                ('fill_in_blank_template', models.TextField(blank=True, null=True)),
                ('blank_position', models.CharField(choices=[('start', 'Start of Sentence'), ('middle', 'Middle of Sentence'), ('end', 'End of Sentence')], default='middle', max_length=10)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('is_last_card', models.BooleanField(default=False)),
                ('difficulty_score', models.FloatField(default=1.0)),
                ('hint_percentage', models.FloatField(default=0.3)),
                ('question', models.TextField(blank=True, null=True)),
                ('blank_placeholder', models.CharField(default='______', max_length=50)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flashcards', to='lessons.lesson')),
            ],
            options={
                'verbose_name': 'Flashcard',
                'verbose_name_plural': 'Flashcards',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lessons.level'),
        ),
        migrations.CreateModel(
            name='LevelTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('passing_score', models.PositiveIntegerField(default=80, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('total_questions', models.PositiveIntegerField(default=10)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='lessons.level')),
            ],
            options={
                'verbose_name': 'Level Test',
                'verbose_name_plural': 'Level Tests',
            },
        ),
        migrations.CreateModel(
            name='LevelTestQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('blank_placeholder', models.CharField(default='______', max_length=50)),
                ('level_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='lessons.leveltest')),
            ],
            options={
                'verbose_name': 'Level Test Question',
                'verbose_name_plural': 'Level Test Questions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('passing_score', models.PositiveIntegerField(default=80, validators=[django.core.validators.MinValueValidator(50), django.core.validators.MaxValueValidator(100)])),
                ('total_questions', models.PositiveIntegerField(default=5)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='lessons.lesson')),
            ],
            options={
                'verbose_name': 'Quiz',
                'verbose_name_plural': 'Quizzes',
            },
        ),
        migrations.CreateModel(
            name='QuizQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('correct_answer', models.CharField(max_length=255)),
                ('order', models.IntegerField(blank=True, default=0, null=True)),
                ('blank_placeholder', models.CharField(default='______', max_length=50)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='lessons.quiz')),
            ],
            options={
                'verbose_name': 'Quiz Question',
                'verbose_name_plural': 'Quiz Questions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='UserFlashcardProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt', models.DateTimeField(blank=True, null=True)),
                ('points_earned', models.FloatField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('flashcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.flashcard')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Flashcard Progress',
                'verbose_name_plural': 'User Flashcard Progresses',
                'unique_together': {('user', 'flashcard')},
            },
        ),
        migrations.CreateModel(
            name='UserLevelTestProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('level_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.leveltest')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.leveltestquestion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Level Test Progress',
                'verbose_name_plural': 'User Level Test Progresses',
                'unique_together': {('user', 'level_test', 'question')},
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('score', models.PositiveIntegerField(default=0)),
                ('total_questions', models.PositiveIntegerField(default=0)),
                ('correct_answers', models.PositiveIntegerField(default=0)),
                ('is_passed', models.BooleanField(default=False)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Progress',
                'verbose_name_plural': 'User Progresses',
                'unique_together': {('user', 'lesson')},
            },
        ),
        migrations.CreateModel(
            name='UserQuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.FloatField(default=0)),
                ('is_passed', models.BooleanField(default=False)),
                ('attempts', models.PositiveIntegerField(default=1)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Quiz Attempt',
                'verbose_name_plural': 'User Quiz Attempts',
                'unique_together': {('user', 'quiz')},
            },
        ),
        migrations.CreateModel(
            name='UserQuizProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_answer', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.quizquestion')),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Quiz Progress',
                'verbose_name_plural': 'User Quiz Progresses',
                'unique_together': {('user', 'quiz', 'question')},
            },
        ),
    ]
